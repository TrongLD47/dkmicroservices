version: "3.9"

services:
  # employee postgres db
  postgres-employee-service:
    container_name: dkmicroservices-employee
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - ./data/db-employee:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dkmicroservices_employee_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  # department postgres db
  postgres-department-service:
    container_name: dkmicroservices-department
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5434:5432"
    volumes:
      - ./data/db-department:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dkmicroservices_department_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  # notification postgres db
  postgres-notification-service:
    container_name: dkmicroservices-notification
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5435:5432"
    volumes:
      - ./data/db-notification:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dkmicroservices_notification_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  # tracking data elastic search
  elasticsearch-tracking-service:
    container_name: dkmicroservices-tracking-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
    volumes:
      - ./data/es-tracking:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # tracking data kibana
  kibana-tracking-service:
    container_name: dkmicroservices-tracking-kibana
    image: docker.elastic.co/kibana/kibana:8.11.1
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-tracking-service

  # location postgres db
  postgres-location-service:
    container_name: dkmicroservices-location
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5436:5432"
    volumes:
      - ./data/db-location:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dkmicroservices_location_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  # distributed tracing zipkin
  distributed-tracing:
    container_name: dkmicroservices-zipkin
    image: openzipkin/zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"

  # message broker
  message-broker:
    container_name: dkmicroservices-rabbitmq
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq

  # caching data
  caching-data:
    container_name: dkmicroservices-redis
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./cache:/data

  # jenkins
  jenkins:
    container_name: dkmicroservices-jenkins
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/local/bin/docker